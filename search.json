[{"path":"https://mjfrigaard.github.io/segtools/articles/compliant-pairs.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Compliant Pairs Table","text":"vignette covers development compliant pairs table, performs unit tests output ensure matches table application.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/compliant-pairs.html","id":"load-test-data","dir":"Articles","previous_headings":"","what":"Load test data","title":"Compliant Pairs Table","text":"segtools package uses testthat, common testing framework performing unit tests. ’ll load test data file used GitHub repo (VanderbiltComplete.csv) run shiny app generate tables comparison.","code":"github_data_root <-   \"https://raw.githubusercontent.com/mjfrigaard/seg-shiny-data/master/Data/\" full_sample_repo <- base::paste0(github_data_root,   \"VanderbiltComplete.csv\") test_vand_comp_data <-   vroom::vroom(file = full_sample_repo, delim = \",\") glimpse(test_vand_comp_data) #> Rows: 9,891 #> Columns: 2 #> $ BGM <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 132, 146, 24… #> $ REF <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 131, 155, 25…"},{"path":"https://mjfrigaard.github.io/segtools/articles/compliant-pairs.html","id":"application-version-1-3-3-functions","dir":"Articles","previous_headings":"Load test data","what":"Application (version 1.3.3) functions","title":"Compliant Pairs Table","text":"previous application functions stored helpers.R file GitHub repo.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/compliant-pairs.html","id":"seg-risk-variables","dir":"Articles","previous_headings":"","what":"SEG Risk Variables","title":"Compliant Pairs Table","text":"Create risk_vars_tbl seg_risk_vars():","code":"risk_vars_tbl <- seg_risk_vars(df = test_vand_comp_data) dplyr::glimpse(risk_vars_tbl) #> Rows: 9,868 #> Columns: 19 #> $ BGM            <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 1… #> $ REF            <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 1… #> $ bgm_pair_cat   <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BG… #> $ ref_pair_2cat  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ included       <chr> \"Total included in SEG Analysis\", \"Total included in SE… #> $ RiskPairID     <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 78… #> $ RiskFactor     <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ abs_risk       <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ risk_cat       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ABSLB          <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001,… #> $ ABSUB          <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, … #> $ risk_cat_txt   <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\",… #> $ rel_diff       <dbl> -0.047244094, -0.049327354, -0.030120482, -0.068292683,… #> $ abs_rel_diff   <dbl> 0.047244094, 0.049327354, 0.030120482, 0.068292683, 0.1… #> $ sq_rel_diff    <dbl> 2.232004e-03, 2.433188e-03, 9.072434e-04, 4.663891e-03,… #> $ iso_diff       <dbl> 4.7244094, 4.9327354, 3.0120482, 6.8292683, 10.0000000,… #> $ iso_range      <chr> \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/… #> $ risk_grade     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", … #> $ risk_grade_txt <chr> \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/compliant-pairs.html","id":"compliant-pairs-table","dir":"Articles","previous_headings":"","what":"Compliant Pairs Table","title":"Compliant Pairs Table","text":"binomialTable() function creates compliant pairs table helpers.R file previous application (using output segTable()).","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/compliant-pairs.html","id":"seg_binom_tbl","dir":"Articles","previous_headings":"Compliant Pairs Table","what":"seg_binom_tbl()","title":"Compliant Pairs Table","text":"’ve re-written binomialTable() seg_binom_tbl()  check seg_binom_tbl() output seg_risk_vars()","code":"seg_binom_tbl <- function(risk_vars) {      compliant_pairs <- tibble(`Compliant Pairs` =          base::nrow(risk_vars) - base::nrow(dplyr::filter(risk_vars, iso_diff > 15)))    # calculate the percent   compliant_pairs_perc <-     dplyr::mutate(compliant_pairs,       `Compliant Pairs %` =         base::paste0(base::round(           100 * `Compliant Pairs` / nrow(risk_vars),           1         ), \"%\")     )   # create probability   prb <- 0.95   p_value <- 0.05   df_size <- nrow(risk_vars)   qbinom_vector <- qbinom(     p = p_value,     size = df_size,     prob = prb   )     qbinom_tbl <- tibble(`Lower Bound for Acceptance` = qbinom_vector)     # clean up this variable in the tibble for display   # qbinom_tbl     qbinom_tbl <- dplyr::mutate(qbinom_tbl,       `Lower Bound for Acceptance %` =         base::paste0(base::round(           100 * `Lower Bound for Acceptance` / nrow(risk_vars),           1         ), \"%\")     )    binom_test_tbl <- dplyr::bind_cols(compliant_pairs_perc, qbinom_tbl)    binom_table <- dplyr::mutate(binom_test_tbl,     Result =       dplyr::if_else(condition = `Compliant Pairs` < `Lower Bound for Acceptance`,         true = paste0(           binom_test_tbl$`Compliant Pairs %`[1],           \" < \",           binom_test_tbl$`Lower Bound for Acceptance %`[1],           \" - Does not meet BGM Surveillance Study Accuracy Standard\"         ),         false = paste0(           binom_test_tbl$`Compliant Pairs %`[1],           \" > \",           binom_test_tbl$`Lower Bound for Acceptance %`[1],           \" - Meets BGM Surveillance Study Accuracy Standard\"         )       )   )   return(binom_table) } seg_binom_tbl(risk_vars = risk_vars_tbl)"},{"path":"https://mjfrigaard.github.io/segtools/articles/compliant-pairs.html","id":"application-binomialtest-table","dir":"Articles","previous_headings":"Compliant Pairs Table","what":"Application BinomialTest table","title":"Compliant Pairs Table","text":"binomial test table (aka compliant pairs table) application.  ’ve re-created table app_binomial_tbl :","code":"app_binomial_tbl <- tibble::as_tibble(data.frame(   stringsAsFactors = FALSE,   check.names = FALSE,   `Compliant Pairs` = c(9220L),   `Compliant Pairs %` = c(\"93.4%\"),   `Lower Bound for Acceptance` = c(9339L),   `Lower Bound for Acceptance %` = c(\"94.6%\"),   Result = c(\"93.4% < 94.6% - Does not meet BGM Surveillance Study Accuracy Standard\") )) app_binomial_tbl"},{"path":"https://mjfrigaard.github.io/segtools/articles/compliant-pairs.html","id":"test","dir":"Articles","previous_headings":"Compliant Pairs Table > Application BinomialTest table","what":"Test","title":"Compliant Pairs Table","text":"’ll final test binomial test table.","code":"testthat::test_that(\"Test compliant pairs table\", { testthat::expect_equal(   # function table   object = seg_binom_tbl(risk_vars = risk_vars_tbl),   # application table   expected = app_binomial_tbl   ) }) #> Test passed 🎉"},{"path":"https://mjfrigaard.github.io/segtools/articles/datasets.html","id":"applookupriskcat-vs--lookupriskcat","dir":"Articles","previous_headings":"","what":"AppLookUpRiskCat vs. LookUpRiskCat","title":"Lookup datasets","text":"two LookUpRiskCat datasets data GitHub repo, ’ll compare contents. LookUpRiskCat two additional columns, otherwise risk_cat, ABSLB, ABSUB identical.","code":"x <- get_seg_data(\"AppLookUpRiskCat\") y <- get_seg_data(\"LookUpRiskCat\") waldo::compare(   x = names(x),   y = names(y) ) #> `old[2:3]`:                           \"ABSLB\"           \"ABSUB\"        #> `new`:      \"RiskCat\" \"ABSLB\" \"ABSUB\" \"RiskCatRangeTxt\" \"RiskCatLabel\" waldo::compare(   x = x$risk_cat,   y = y$RiskCat ) #> ✔ No differences waldo::compare(   x = x$ABSLB,   y = y$ABSLB ) #> ✔ No differences waldo::compare(   x = x$ABSUB,   y = y$ABSUB ) #> ✔ No differences"},{"path":"https://mjfrigaard.github.io/segtools/articles/datasets.html","id":"appriskpairdata-vs-riskpairdata","dir":"Articles","previous_headings":"","what":"AppRiskPairData vs RiskPairData","title":"Lookup datasets","text":"risk pairs data also two versions (AppRiskPairData RiskPairData): AppRiskPairData RiskPairData three identical columns: REF/RefVal, BGM/MeasVal, RiskFactor. AppRiskPairData two additional columns (RiskPairID abs_risk).","code":"x <- get_seg_data(\"AppRiskPairData\") y <- get_seg_data(\"RiskPairData\") waldo::compare(   x = names(x),   y = names(y) ) #> `old`:      \"RiskPairID\" \"REF\"     \"BGM\" \"RiskFactor\" \"abs_risk\"   #> `new[2:4]`: \"RefVal\"     \"MeasVal\"                    \"RiskFactor\" waldo::compare(   x = x$REF,   y = y$RefVal ) #> ✔ No differences waldo::compare(   x = x$BGM,   y = y$MeasVal ) #> ✔ No differences waldo::compare(   x = x$RiskFactor,   y = y$RiskFactor ) #> ✔ No differences"},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"motivating-problemissue","dir":"Articles","previous_headings":"","what":"Motivating problem/issue","title":"Heatmap","text":"earlier versions application, heat-map background wasn’t smoothed like original Excel application. file documents changed SEG graph using pre-made .png image.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"data","dir":"Articles","previous_headings":"Motivating problem/issue","what":"Data","title":"Heatmap","text":"create SEG using ggplot, need load data inputs Github.. can segtools::get_seg_data() function code chunk : risk_pairs -> assigns risk factor value BGM measurement samp_measured_data -> small sample measurement dataset vand_data -> dataset Vanderbilt used create initial calculations risk_pairs columns risk pairs REF BGM, RiskFactor variable pair REF BGM data. can see sample REF, BGM, RiskFactor, abs_risk variables. samp_measured_data mimics blood glucose monitor, BGM REF values. vand_data contains blood glucose monitor measurements, BGM REF values.","code":"segtools::get_seg_data(\"names\") #>  [1] \"VanderbiltComplete\"   \"AppRiskPairData\"      \"RiskPairData\"         #>  [4] \"AppLookUpRiskCat\"     \"LookUpRiskCat\"        \"AppTestData\"          #>  [7] \"AppTestDataSmall\"     \"AppTestDataMed\"       \"AppTestDataBig\"       #> [10] \"FullSampleData\"       \"ModBAData\"            \"No_Interference_Dogs\" #> [13] \"SEGRiskTable\"         \"SampMeasData\"         \"SampleData\"           #> [16] \"lkpRiskGrade\"         \"lkpSEGRiskCat4\" risk_pairs <- segtools::get_seg_data(\"AppRiskPairData\") samp_measured_data <- segtools::get_seg_data(\"FullSampleData\") vand_data <- segtools::get_seg_data(\"VanderbiltComplete\") mmolConvFactor <- segtools::mmolConvFactor mmolConvFactor #> [1] 18.01806 risk_factor_colors <- segtools::risk_factor_colors base_data <- segtools::base_data base_data #>   x_coordinate y_coordinate color_gradient #> 1            0            0              0 #> 2            0            0              1 #> 3            0            0              2 #> 4            0            0              3 #> 5            0            0              4 risk_pairs |>    dplyr::sample_n(size = 10) |>     dplyr::select(     REF, BGM, RiskFactor, abs_risk) #> # A tibble: 10 × 4 #>      REF   BGM RiskFactor abs_risk #>    <dbl> <dbl>      <dbl>    <dbl> #>  1   396   490     -0.366    0.366 #>  2    79   558     -3.18     3.18  #>  3   594    42      3.12     3.12  #>  4   527   215      1.11     1.11  #>  5   333   570     -0.697    0.697 #>  6   177   539     -2.04     2.04  #>  7   315   378     -0.211    0.211 #>  8   591   434      0.155    0.155 #>  9   203   144      0.919    0.919 #> 10   474   335      0.514    0.514 samp_measured_data |>    dplyr::sample_n(size = 10) |>     dplyr::select(     REF, BGM) #> # A tibble: 10 × 2 #>      REF   BGM #>    <dbl> <dbl> #>  1   121   123 #>  2   115   120 #>  3   111   116 #>  4   132   143 #>  5   194   202 #>  6   179   174 #>  7   150   161 #>  8   109   100 #>  9   174   183 #> 10   106   111 vand_data |>     dplyr::sample_n(size = 10) |>    dplyr::select(REF, BGM) #> # A tibble: 10 × 2 #>      REF   BGM #>    <dbl> <dbl> #>  1   264   257 #>  2   122   129 #>  3   116   108 #>  4   136   126 #>  5   131   131 #>  6   124   132 #>  7   158   153 #>  8   101   106 #>  9   158   154 #> 10   132   143"},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"the-original-excel-seg-image","dir":"Articles","previous_headings":"Motivating problem/issue","what":"The original (Excel) SEG image","title":"Heatmap","text":"image Excel file:  points plotted Gaussian smoothed background image.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"ggplot2-image-using-risk-pairs","dir":"Articles","previous_headings":"Motivating problem/issue","what":"ggplot2 image using risk pairs","title":"Heatmap","text":"steps/code create current ggplot2 image ","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"base-layer","dir":"Articles","previous_headings":"Motivating problem/issue > ggplot2 image using risk pairs","what":"Base layer","title":"Heatmap","text":"","code":"ggp_base <- ggplot() +   geom_point(data = base_data,      aes(x = x_coordinate,       y = y_coordinate,       fill = color_gradient)) ggp_base"},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"risk-color-gradient","dir":"Articles","previous_headings":"Motivating problem/issue","what":"Risk color gradient","title":"Heatmap","text":"risk layer adds risk_pairs data creates color gradient.","code":"ggp_risk_color_gradient <- ggp_base +   geom_point(data = risk_pairs,      aes(x = REF,          y = BGM,         color = abs_risk), show.legend = FALSE)  +   ggplot2::scale_color_gradientn(     colors = risk_factor_colors,      guide = \"none\",     limits = c(0, 4),     values = scales::rescale(c(       0, # darkgreen       0.4375, # green       1.0625, # yellow       2.7500, # red       4.0000))) ggp_risk_color_gradient"},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"risk-fill-gradient","dir":"Articles","previous_headings":"Motivating problem/issue","what":"Risk fill gradient","title":"Heatmap","text":"guide added ggplot2::scale_fill_gradientn() ggplot2::guide_colorbar().","code":"ggp2_risk_fill_gradient <- ggp_risk_color_gradient +   ggplot2::scale_fill_gradientn(values = scales::rescale(c(       0, # darkgreen       0.4375, # green       1.0625, # yellow       2.75, # red       4.0 # brown     )),      limits = c(0, 4),     colors = risk_factor_colors,     guide = ggplot2::guide_colorbar(ticks = FALSE,                            barheight = unit(100, \"mm\")),                            breaks = c(0.25, 1, 2, 3, 3.75),                            labels = c(\"None\", \"Slight\",                                        \"Moderate\", \"High\", \"Extreme\"),                            name = \"Risk level\") ggp2_risk_fill_gradient"},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"scales","dir":"Articles","previous_headings":"Motivating problem/issue","what":"Scales","title":"Heatmap","text":"x y scales set manually using ggplot2::scale_y_continuous() ggplot2::scale_x_continuous().","code":"ggp_scales <- ggp2_risk_fill_gradient +   ggplot2::scale_y_continuous(     limits = c(0, 600),     sec.axis =       sec_axis(~. / mmolConvFactor,         name = \"Measured blood glucose (mmol/L)\"       ),     name = \"Measured blood glucose (mg/dL)\"   ) +   ggplot2::scale_x_continuous(     limits = c(0, 600),     sec.axis =       sec_axis(~. / mmolConvFactor,         name = \"Reference blood glucose (mmol/L)\"       ),     name = \"Reference blood glucose (mg/dL)\"   ) ggp_scales"},{"path":"https://mjfrigaard.github.io/segtools/articles/heatmap.html","id":"theme","dir":"Articles","previous_headings":"Motivating problem/issue","what":"Theme","title":"Heatmap","text":"Finally, theme added polish output.","code":"ggp_seg <- ggp_scales +    segtools::theme_seg(base_size = 20) ggp_seg"},{"path":"https://mjfrigaard.github.io/segtools/articles/hexsticker.html","id":"package-hex-sticker","dir":"Articles","previous_headings":"","what":"Package hex sticker","title":"Hex sticker","text":"vignette covers images hex-sticker created.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/hexsticker.html","id":"data","dir":"Articles","previous_headings":"Package hex sticker","what":"Data","title":"Hex sticker","text":"","code":"risk_pairs <- segtools::get_seg_data(\"AppRiskPairData\") vand_data <- segtools::get_seg_data(\"VanderbiltComplete\")"},{"path":"https://mjfrigaard.github.io/segtools/articles/hexsticker.html","id":"graph-constants","dir":"Articles","previous_headings":"Package hex sticker","what":"Graph constants","title":"Hex sticker","text":"","code":"mmolConvFactor <- segtools::mmolConvFactor mmolConvFactor #> [1] 18.01806 risk_factor_colors <- segtools::risk_factor_colors risk_factor_colors #> [1] \"#00A500\" \"#00FF00\" \"#FFFF00\" \"#FF0000\" \"#800000\" base_data <- segtools::base_data base_data #>   x_coordinate y_coordinate color_gradient #> 1            0            0              0 #> 2            0            0              1 #> 3            0            0              2 #> 4            0            0              3 #> 5            0            0              4"},{"path":"https://mjfrigaard.github.io/segtools/articles/hexsticker.html","id":"seg-graph","dir":"Articles","previous_headings":"Package hex sticker","what":"SEG graph","title":"Hex sticker","text":"","code":"ggp_seg_hex <- ggplot() +   geom_point(     data = base_data,     aes(       x = x_coordinate,       y = y_coordinate,       fill = color_gradient     ),     show.legend = FALSE   ) +   geom_point(     data = risk_pairs,     aes(       x = REF,       y = BGM,       color = abs_risk     ),     show.legend = FALSE   ) +   ggplot2::scale_color_gradientn(     colors = risk_factor_colors,     guide = \"none\",     limits = c(0, 4),     values = scales::rescale(c(       0, # darkgreen       0.4375, # green       1.0625, # yellow       2.7500, # red       4.0000     ))   ) +   ggplot2::scale_fill_gradientn(     values = scales::rescale(c(       0, # darkgreen       0.4375, # green       1.0625, # yellow       2.75, # red       4.0 # brown     )),     limits = c(0, 4),     colors = risk_factor_colors,     guide = ggplot2::guide_colorbar(       ticks = FALSE,       barheight = unit(100, \"mm\")     ),     breaks = c(0.25, 1, 2, 3, 3.75),     labels = c(       \"None\", \"Slight\",       \"Moderate\", \"High\", \"Extreme\"     ),     name = \"Risk level\"   ) +   ggplot2::scale_y_continuous(     limits = c(0, 600),     sec.axis =       sec_axis(~ . / mmolConvFactor,         name = \"Measured blood glucose (mmol/L)\"       ),     name = \"Measured blood glucose (mg/dL)\"   ) +   ggplot2::scale_x_continuous(     limits = c(0, 600),     sec.axis =       sec_axis(~ . / mmolConvFactor,         name = \"Reference blood glucose (mmol/L)\"       ),     name = \"Reference blood glucose (mg/dL)\"   ) +   ggplot2::geom_point(     data = vand_data,     ggplot2::aes(       x = REF,       y = BGM     ),     shape = 21,     alpha = 0.75,     size = 3.3,     color = \"#000000\",     fill = \"#FFFFFF\",     stroke = 0.4   ) +   ggplot2::theme_void(base_size = 20, base_family = \"Ubuntu\") ggp_seg_hex"},{"path":"https://mjfrigaard.github.io/segtools/articles/hexsticker.html","id":"modified-bland-altman-plot","dir":"Articles","previous_headings":"Package hex sticker","what":"Modified Bland-Altman Plot","title":"Hex sticker","text":"","code":"ln_risk_pairs <- dplyr::mutate(vand_data,          lnREF = log(REF),          lnBGM = log(BGM),          lnDiff = lnBGM - lnREF,          rel_perc_diff = exp(lnDiff) - 1)  ggp_modba_hex <- ggplot2::ggplot(data = ln_risk_pairs,   mapping = ggplot2::aes(x = REF, y = rel_perc_diff)) +  ggplot2::geom_point(   alpha = 1.0,   size = 2.5,   shape = 21,   fill = \"#FFFFFF\",   color = \"#005b96\") +    ggplot2::geom_point(   alpha = 1.0,   shape = 21,   size = 1.88,   color = \"#def3f6\", #03396c   fill = \"#03396c\") +  ggplot2::scale_y_continuous(   limits = c(-0.50, 0.50) ) +  ggplot2::geom_line(   ggplot2::aes(x = Ref, y = UB),   data = segtools::APPSEGBlandAltmanRefVals,   linetype = \"dotted\",   lineend = \"round\",   linejoin = \"round\",   color = \"#ce2b37\",   linewidth = 2.2,   alpha = 0.85 ) +  ggplot2::geom_line(   ggplot2::aes(x = Ref, y = LB),   data = segtools::APPSEGBlandAltmanRefVals,   linetype = \"dotted\",   lineend = \"round\",   linejoin = \"round\",   color = \"#ce2b37\",   linewidth = 2.2,   alpha = 0.85 ) + ggplot2::theme_void(base_size = 20) ggp_modba_hex"},{"path":"https://mjfrigaard.github.io/segtools/articles/hexsticker.html","id":"create-hex-sticker","dir":"Articles","previous_headings":"Package hex sticker","what":"Create hex sticker","title":"Hex sticker","text":"hex-sticker built hexSticker magick packages. import hex-img-raw.png (combination plots ) creates customizations hex sticker image: Review","code":"img_path <- \"../man/figures/hex-img-raw.png\" hexSticker::sticker(   img_path,   u_family = \"Ubuntu\",   # colors    h_fill = \"#FFFFFF\", # fill   p_color = \"#02577A\", # package name   h_color = \"#043b67\", # hexagon border   u_color = \"#fa7b3c\", # color for url      package = \"segtools\",   p_size = 18,   p_x = 1,   p_y = 1.51,      s_x = 1,   s_y = .92,   s_width = .92,      url = \"mjfrigaard.github.io/segtools\",   u_size = 4.5,      filename = \"../man/figures/package_hex.png\",    ) knitr::include_graphics(\"../man/figures/package_hex.png\")"},{"path":"https://mjfrigaard.github.io/segtools/articles/iso-ranges.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"ISO Range Table","text":"vignette covers ISO range table function performs unit tests output table ensure matches table output application.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/iso-ranges.html","id":"load-test-data","dir":"Articles","previous_headings":"","what":"Load test data","title":"ISO Range Table","text":"segtools package uses testthat, common testing framework performing unit tests. ’ll load test data file used GitHub repo (VanderbiltComplete.csv) run shiny app generate tables comparison.","code":"github_data_root <-   \"https://raw.githubusercontent.com/mjfrigaard/seg-shiny-data/master/Data/\" full_sample_repo <- base::paste0(github_data_root,   \"VanderbiltComplete.csv\") test_vand_comp_data <-   vroom::vroom(file = full_sample_repo, delim = \",\") glimpse(test_vand_comp_data) #> Rows: 9,891 #> Columns: 2 #> $ BGM <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 132, 146, 24… #> $ REF <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 131, 155, 25…"},{"path":"https://mjfrigaard.github.io/segtools/articles/iso-ranges.html","id":"application-version-1-3-3-functions","dir":"Articles","previous_headings":"Load test data","what":"Application (version 1.3.3) functions","title":"ISO Range Table","text":"three functions helpers.R file application repo.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/iso-ranges.html","id":"seg-risk-variables","dir":"Articles","previous_headings":"","what":"SEG Risk Variables","title":"ISO Range Table","text":"Create risk_vars_tbl seg_risk_vars():","code":"risk_vars_tbl <- seg_risk_vars(df = test_vand_comp_data) dplyr::glimpse(risk_vars_tbl) #> Rows: 9,868 #> Columns: 19 #> $ BGM            <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 1… #> $ REF            <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 1… #> $ bgm_pair_cat   <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BG… #> $ ref_pair_2cat  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ included       <chr> \"Total included in SEG Analysis\", \"Total included in SE… #> $ RiskPairID     <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 78… #> $ RiskFactor     <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ abs_risk       <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ risk_cat       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ABSLB          <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001,… #> $ ABSUB          <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, … #> $ risk_cat_txt   <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\",… #> $ rel_diff       <dbl> -0.047244094, -0.049327354, -0.030120482, -0.068292683,… #> $ abs_rel_diff   <dbl> 0.047244094, 0.049327354, 0.030120482, 0.068292683, 0.1… #> $ sq_rel_diff    <dbl> 2.232004e-03, 2.433188e-03, 9.072434e-04, 4.663891e-03,… #> $ iso_diff       <dbl> 4.7244094, 4.9327354, 3.0120482, 6.8292683, 10.0000000,… #> $ iso_range      <chr> \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/… #> $ risk_grade     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", … #> $ risk_grade_txt <chr> \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/iso-ranges.html","id":"iso-range-table","dir":"Articles","previous_headings":"","what":"ISO Range Table","title":"ISO Range Table","text":"ISORangeTable5 table also created server function App.R file.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/iso-ranges.html","id":"seg_iso_range_tbl","dir":"Articles","previous_headings":"ISO Range Table","what":"seg_iso_range_tbl()","title":"ISO Range Table","text":"’ve re-written seg_iso_range_tbl():","code":"seg_iso_range_tbl(risk_vars_tbl) #> # A tibble: 5 × 4 #>      ID `ISO range`             N Percent #>   <int> <chr>               <int> <chr>   #> 1     1 <= 5% or 5 mg/dL     5328 54%     #> 2     2 > 5 - 10% or mg/dL   2842 28.8%   #> 3     3 > 10 - 15% or mg/dL  1050 10.6%   #> 4     4 > 15 - 20% mg/dL      340 3.4%    #> 5     5 > 20% or 20 mg/dL     308 3.1%"},{"path":"https://mjfrigaard.github.io/segtools/articles/iso-ranges.html","id":"application-isorangetable","dir":"Articles","previous_headings":"ISO Range Table","what":"Application ISORangeTable","title":"ISO Range Table","text":"output ISORangeTable application  ’ve re-created app_iso_range_tbl :","code":"app_iso_range_tbl <- tibble::tribble(      ~ID,          ~`ISO range`,    ~N, ~Percent,       1L,    \"<= 5% or 5 mg/dL\", 5328L,    \"54%\",       2L,  \"> 5 - 10% or mg/dL\", 2842L,  \"28.8%\",       3L, \"> 10 - 15% or mg/dL\", 1050L,  \"10.6%\",       4L,    \"> 15 - 20% mg/dL\",  340L,   \"3.4%\",       5L,   \"> 20% or 20 mg/dL\",  308L,   \"3.1%\"      ) app_iso_range_tbl"},{"path":"https://mjfrigaard.github.io/segtools/articles/iso-ranges.html","id":"test","dir":"Articles","previous_headings":"ISO Range Table > Application ISORangeTable","what":"Test","title":"ISO Range Table","text":"test two ISORangeTable tables","code":"testthat::test_that(\"Test risk grade table\", { testthat::expect_equal(   # function table   object = seg_iso_range_tbl(risk_vars_tbl),   # application table   expected = app_iso_range_tbl   ) }) #> Test passed 🌈"},{"path":"https://mjfrigaard.github.io/segtools/articles/mard.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Risk Grades","text":"vignette covers MARD table function, performs unit tests output seg_mard_tbl() function ensure match table output application.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/mard.html","id":"load-test-data","dir":"Articles","previous_headings":"","what":"Load test data","title":"Risk Grades","text":"segtools package uses testthat, common testing framework performing unit tests. ’ll load test data file used GitHub repo (VanderbiltComplete.csv) run shiny app generate tables comparison.","code":"github_data_root <-   \"https://raw.githubusercontent.com/mjfrigaard/seg-shiny-data/master/Data/\" full_sample_repo <- base::paste0(github_data_root,   \"VanderbiltComplete.csv\") test_vand_comp_data <-   vroom::vroom(file = full_sample_repo, delim = \",\") glimpse(test_vand_comp_data) #> Rows: 9,891 #> Columns: 2 #> $ BGM <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 132, 146, 24… #> $ REF <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 131, 155, 25…"},{"path":"https://mjfrigaard.github.io/segtools/articles/mard.html","id":"application-version-1-3-3-functions","dir":"Articles","previous_headings":"Load test data","what":"Application (version 1.3.3) functions","title":"Risk Grades","text":"previous application functions stored helpers.R file GitHub repo.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/mard.html","id":"seg-risk-variables","dir":"Articles","previous_headings":"","what":"SEG Risk Variables","title":"Risk Grades","text":"Create risk_vars_tbl seg_risk_vars():","code":"risk_vars_tbl <- seg_risk_vars(df = test_vand_comp_data) dplyr::glimpse(risk_vars_tbl) #> Rows: 9,868 #> Columns: 19 #> $ BGM            <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 1… #> $ REF            <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 1… #> $ bgm_pair_cat   <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BG… #> $ ref_pair_2cat  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ included       <chr> \"Total included in SEG Analysis\", \"Total included in SE… #> $ RiskPairID     <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 78… #> $ RiskFactor     <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ abs_risk       <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ risk_cat       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ABSLB          <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001,… #> $ ABSUB          <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, … #> $ risk_cat_txt   <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\",… #> $ rel_diff       <dbl> -0.047244094, -0.049327354, -0.030120482, -0.068292683,… #> $ abs_rel_diff   <dbl> 0.047244094, 0.049327354, 0.030120482, 0.068292683, 0.1… #> $ sq_rel_diff    <dbl> 2.232004e-03, 2.433188e-03, 9.072434e-04, 4.663891e-03,… #> $ iso_diff       <dbl> 4.7244094, 4.9327354, 3.0120482, 6.8292683, 10.0000000,… #> $ iso_range      <chr> \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/… #> $ risk_grade     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", … #> $ risk_grade_txt <chr> \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/mard.html","id":"mard-table","dir":"Articles","previous_headings":"","what":"MARD Table","title":"Risk Grades","text":"MARDTable created server function application, starting . ’ve converted function, seg_mard_tbl(), takes output seg_risk_vars():","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/mard.html","id":"seg_mard_tbl","dir":"Articles","previous_headings":"MARD Table","what":"seg_mard_tbl()","title":"Risk Grades","text":"check seg_mard_tbl() function:","code":"seg_mard_tbl <- function(risk_vars) {   mard_cols <- data.frame(     Total = c(nrow(risk_vars)),     Bias = c(mean(risk_vars$rel_diff)),     MARD = c(mean(risk_vars$abs_rel_diff)),     CV = c(sd(risk_vars$rel_diff)),     stringsAsFactors = FALSE,     check.names = FALSE   )    lower_tbl <- tibble::add_column(     .data = mard_cols,     `Lower 95% Limit of Agreement` = mard_cols$Bias - 1.96 * mard_cols$CV   )   upper_tbl <- tibble::add_column(     .data = lower_tbl,     `Upper 95% Limit of Agreement` = mard_cols$Bias + 1.96 * mard_cols$CV   )   mard_vars <- dplyr::mutate(     .data = upper_tbl,     Bias = base::paste0(base::round(       100 * Bias,       digits = 1     ), \"%\"),     MARD = base::paste0(base::round(       100 * MARD,       digits = 1     ), \"%\"),     CV = base::paste0(base::round(       100 * CV,       digits = 1     ), \"%\"),     `Lower 95% Limit of Agreement` = base::paste0(base::round(       100 * `Lower 95% Limit of Agreement`,       digits = 1     ), \"%\"),     `Upper 95% Limit of Agreement` = base::paste0(base::round(       100 * `Upper 95% Limit of Agreement`,       digits = 1     ), \"%\")   )   mard_vars_tbl <- tibble::as_tibble(mard_vars)   return(mard_vars_tbl) } seg_mard_tbl(risk_vars = risk_vars_tbl)"},{"path":"https://mjfrigaard.github.io/segtools/articles/mard.html","id":"application-mardtable","dir":"Articles","previous_headings":"MARD Table","what":"Application MARDTable","title":"Risk Grades","text":"MARD table application :  , store app’s MARD table object can test using datapasta::tribble_paste() (app_mard_tbl).","code":"app_mard_tbl <- tibble::tibble(     Total = 9868L,     Bias = \"0.6%\",     MARD = \"7%\",     CV = \"14.8%\",     `Lower 95% Limit of Agreement` = \"-28.3%\",     `Upper 95% Limit of Agreement` = \"29.6%\") app_mard_tbl"},{"path":"https://mjfrigaard.github.io/segtools/articles/mard.html","id":"test","dir":"Articles","previous_headings":"MARD Table > Application MARDTable","what":"Test","title":"Risk Grades","text":"test MARD tables using testthat::expect_equal() :","code":"testthat::test_that(\"Test MARD table values\", { testthat::expect_equal(   # function table   object = seg_mard_tbl(risk_vars = risk_vars_tbl),   # application table   expected = app_mard_tbl   ) }) #> Test passed 🌈"},{"path":"https://mjfrigaard.github.io/segtools/articles/pair-types.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Pair Types","text":"vignette covers pair type table function performs unit tests ensure output seg_pair_type_tbl() function match output table application.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/pair-types.html","id":"load-test-data","dir":"Articles","previous_headings":"","what":"Load test data","title":"Pair Types","text":"segtools package uses testthat, common testing framework performing unit tests. ’ll load test data file used GitHub repo (VanderbiltComplete.csv) run shiny app generate tables comparison.","code":"github_data_root <-   \"https://raw.githubusercontent.com/mjfrigaard/seg-shiny-data/master/Data/\" full_sample_repo <- base::paste0(github_data_root,   \"VanderbiltComplete.csv\") test_vand_comp_data <-   vroom::vroom(file = full_sample_repo, delim = \",\") glimpse(test_vand_comp_data) #> Rows: 9,891 #> Columns: 2 #> $ BGM <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 132, 146, 24… #> $ REF <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 131, 155, 25…"},{"path":"https://mjfrigaard.github.io/segtools/articles/pair-types.html","id":"application-version-1-3-3-functions","dir":"Articles","previous_headings":"Load test data","what":"Application (version 1.3.3) functions","title":"Pair Types","text":"previous application functions stored helpers.R file GitHub repo.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/pair-types.html","id":"seg-risk-variables","dir":"Articles","previous_headings":"","what":"SEG Risk Variables","title":"Pair Types","text":"Create risk_vars_tbl seg_risk_vars():","code":"risk_vars_tbl <- seg_risk_vars(df = test_vand_comp_data) dplyr::glimpse(risk_vars_tbl) #> Rows: 9,868 #> Columns: 19 #> $ BGM            <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 1… #> $ REF            <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 1… #> $ bgm_pair_cat   <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BG… #> $ ref_pair_2cat  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ included       <chr> \"Total included in SEG Analysis\", \"Total included in SE… #> $ RiskPairID     <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 78… #> $ RiskFactor     <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ abs_risk       <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ risk_cat       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ABSLB          <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001,… #> $ ABSUB          <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, … #> $ risk_cat_txt   <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\",… #> $ rel_diff       <dbl> -0.047244094, -0.049327354, -0.030120482, -0.068292683,… #> $ abs_rel_diff   <dbl> 0.047244094, 0.049327354, 0.030120482, 0.068292683, 0.1… #> $ sq_rel_diff    <dbl> 2.232004e-03, 2.433188e-03, 9.072434e-04, 4.663891e-03,… #> $ iso_diff       <dbl> 4.7244094, 4.9327354, 3.0120482, 6.8292683, 10.0000000,… #> $ iso_range      <chr> \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/… #> $ risk_grade     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", … #> $ risk_grade_txt <chr> \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/pair-types.html","id":"pair-type-table","dir":"Articles","previous_headings":"","what":"Pair Type Table","title":"Pair Types","text":"original pairtypeTable() function stored application helpers.R file.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/pair-types.html","id":"seg_pair_type_tbl","dir":"Articles","previous_headings":"Pair Type Table","what":"seg_pair_type_tbl()","title":"Pair Types","text":"’ve re-written pairtypeTable() seg_pair_type_tbl() check seg_pair_type_tbl() test_vand_comp_data (VanderbiltComplete.csv) data, see following:","code":"seg_pair_type_tbl(df = test_vand_comp_data)"},{"path":"https://mjfrigaard.github.io/segtools/articles/pair-types.html","id":"application-pairtypetable","dir":"Articles","previous_headings":"Pair Type Table","what":"Application PairTypeTable","title":"Pair Types","text":"uploading VanderbiltComplete.csv, first table Summary Tables tab pairs table:  ’ve also stored app_pairs_tbl:","code":"app_pairs_tbl = tibble::as_tibble(data.frame(   stringsAsFactors = FALSE,   check.names = FALSE,   `Pair Type` = c(     \"Total\",     \"BGM < REF\",     \"BGM = REF\",     \"BGM > REF\",     \"REF > 600: Excluded from SEG Analysis\",     \"Total included in SEG Analysis\"   ),   Count = c(9891L, 4710L, 479L, 4702L, 23L, 9868L) )) app_pairs_tbl"},{"path":"https://mjfrigaard.github.io/segtools/articles/pair-types.html","id":"test","dir":"Articles","previous_headings":"Pair Type Table > Application PairTypeTable","what":"Test","title":"Pair Types","text":"test two tables identical, use testthat’s testthat::expect_equal() function, object set seg_pair_type_tbl(dat = test_vand_comp_data) expected set app_pairs_tbl.","code":"testthat::test_that(\"Test seg_pair_type_tbl()\", {   testthat::expect_equal(     # function table     object = seg_pair_type_tbl(df = test_vand_comp_data),      # application table     expected = app_pairs_tbl   ) }) #> Test passed 🥇"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-categories.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Risk Categories","text":"vignette covers risk category table function performs unit tests output ensure matches table application.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-categories.html","id":"load-test-data","dir":"Articles","previous_headings":"","what":"Load test data","title":"Risk Categories","text":"segtools package uses testthat, common testing framework performing unit tests. ’ll load test data file used GitHub repo (VanderbiltComplete.csv) run shiny app generate tables comparison.","code":"github_data_root <-   \"https://raw.githubusercontent.com/mjfrigaard/seg-shiny-data/master/Data/\" full_sample_repo <- base::paste0(github_data_root,   \"VanderbiltComplete.csv\") test_vand_comp_data <-   vroom::vroom(file = full_sample_repo, delim = \",\") glimpse(test_vand_comp_data) #> Rows: 9,891 #> Columns: 2 #> $ BGM <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 132, 146, 24… #> $ REF <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 131, 155, 25…"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-categories.html","id":"application-version-1-3-3-functions","dir":"Articles","previous_headings":"Load test data","what":"Application (version 1.3.3) functions","title":"Risk Categories","text":"previous application functions stored helpers.R file GitHub repo.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-categories.html","id":"seg-risk-variables","dir":"Articles","previous_headings":"","what":"SEG Risk Variables","title":"Risk Categories","text":"Create risk_vars_tbl seg_risk_vars():","code":"risk_vars_tbl <- seg_risk_vars(df = test_vand_comp_data) dplyr::glimpse(risk_vars_tbl) #> Rows: 9,868 #> Columns: 19 #> $ BGM            <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 1… #> $ REF            <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 1… #> $ bgm_pair_cat   <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BG… #> $ ref_pair_2cat  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ included       <chr> \"Total included in SEG Analysis\", \"Total included in SE… #> $ RiskPairID     <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 78… #> $ RiskFactor     <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ abs_risk       <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ risk_cat       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ABSLB          <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001,… #> $ ABSUB          <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, … #> $ risk_cat_txt   <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\",… #> $ rel_diff       <dbl> -0.047244094, -0.049327354, -0.030120482, -0.068292683,… #> $ abs_rel_diff   <dbl> 0.047244094, 0.049327354, 0.030120482, 0.068292683, 0.1… #> $ sq_rel_diff    <dbl> 2.232004e-03, 2.433188e-03, 9.072434e-04, 4.663891e-03,… #> $ iso_diff       <dbl> 4.7244094, 4.9327354, 3.0120482, 6.8292683, 10.0000000,… #> $ iso_range      <chr> \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/… #> $ risk_grade     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", … #> $ risk_grade_txt <chr> \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-categories.html","id":"risk-category-table","dir":"Articles","previous_headings":"","what":"Risk Category Table","title":"Risk Categories","text":"SEGRiskCategoryTable4 table created app server function","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-categories.html","id":"seg_risk_cat_tbl","dir":"Articles","previous_headings":"Risk Category Table","what":"seg_risk_cat_tbl()","title":"Risk Categories","text":"’ve re-written seg_risk_cat_tbl(): confirm output seg_risk_cat_tbl():","code":"seg_risk_cat_tbl(risk_vars_tbl)"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-categories.html","id":"application-riskcategorytable","dir":"Articles","previous_headings":"Risk Category Table","what":"Application RiskCategoryTable","title":"Risk Categories","text":"app display risk level table.   risk level table also built DT, ’ve built app_risk_level_tbl (testing)","code":"app_risk_level_tbl <- as.data.frame(   tibble::tibble(     `SEG Risk Level` = c(0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L),     `SEG Risk Category` = c(       'None',        'Slight, Lower', 'Slight, Higher',       'Moderate, Lower','Moderate, Higher',       'Severe, Lower', 'Severe, Higher',       'Extreme'     ),     `Number of Pairs` = c(9474L, 294L, 55L, 24L, 11L, 10L, NA_integer_, NA_integer_),     Percent = c(       '96%', '3%', '0.6%', '0.2%', '0.1%', '0.1%', NA_character_, NA_character_     ),   ) ) app_risk_level_tbl"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-categories.html","id":"test","dir":"Articles","previous_headings":"Risk Category Table > Application RiskCategoryTable","what":"Test","title":"Risk Categories","text":"’ll limit test Number Pairs column.","code":"testthat::test_that(\"Test risk category pairs\", { testthat::expect_equal(   # function table   object = seg_risk_cat_tbl(risk_vars_tbl)$`Number of Pairs`,    # application table   expected = app_risk_level_tbl$`Number of Pairs`   ) }) #> Test passed 🎉"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-grade.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Risk Grades","text":"vignette covers risk grade table function (seg_risk_grade_tbl()), including unit tests comparisons output seg_risk_grade_tbl() output application.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-grade.html","id":"load-test-data","dir":"Articles","previous_headings":"Objective","what":"Load test data","title":"Risk Grades","text":"segtools package uses testthat, common testing framework performing unit tests. ’ll load test data file used GitHub repo (VanderbiltComplete.csv) run shiny app generate tables comparison.","code":"github_data_root <-   \"https://raw.githubusercontent.com/mjfrigaard/seg-shiny-data/master/Data/\" full_sample_repo <- base::paste0(github_data_root,   \"VanderbiltComplete.csv\") test_vand_comp_data <-   vroom::vroom(file = full_sample_repo, delim = \",\") glimpse(test_vand_comp_data) #> Rows: 9,891 #> Columns: 2 #> $ BGM <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 132, 146, 24… #> $ REF <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 131, 155, 25…"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-grade.html","id":"application-version-1-3-3-helper-functions","dir":"Articles","previous_headings":"Objective > Load test data","what":"Application (version 1.3.3) helper functions","title":"Risk Grades","text":"previous risk grade table functions come helpers.R file application repo.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-grade.html","id":"risk-grade-table","dir":"Articles","previous_headings":"","what":"Risk Grade Table","title":"Risk Grades","text":"RiskGradeTable3 also created server function previous application.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-grade.html","id":"seg-risk-variables","dir":"Articles","previous_headings":"Risk Grade Table","what":"SEG Risk Variables","title":"Risk Grades","text":"Create risk_vars_tbl seg_risk_vars():","code":"risk_vars_tbl <- seg_risk_vars(df = test_vand_comp_data) dplyr::glimpse(risk_vars_tbl) #> Rows: 9,868 #> Columns: 19 #> $ BGM            <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 1… #> $ REF            <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 1… #> $ bgm_pair_cat   <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BG… #> $ ref_pair_2cat  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ included       <chr> \"Total included in SEG Analysis\", \"Total included in SE… #> $ RiskPairID     <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 78… #> $ RiskFactor     <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ abs_risk       <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ risk_cat       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ABSLB          <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001,… #> $ ABSUB          <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, … #> $ risk_cat_txt   <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\",… #> $ rel_diff       <dbl> -0.047244094, -0.049327354, -0.030120482, -0.068292683,… #> $ abs_rel_diff   <dbl> 0.047244094, 0.049327354, 0.030120482, 0.068292683, 0.1… #> $ sq_rel_diff    <dbl> 2.232004e-03, 2.433188e-03, 9.072434e-04, 4.663891e-03,… #> $ iso_diff       <dbl> 4.7244094, 4.9327354, 3.0120482, 6.8292683, 10.0000000,… #> $ iso_range      <chr> \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/… #> $ risk_grade     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", … #> $ risk_grade_txt <chr> \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-grade.html","id":"seg_risk_grade_tbl","dir":"Articles","previous_headings":"Risk Grade Table","what":"seg_risk_grade_tbl()","title":"Risk Grades","text":"’ve re-written previous server code seg_risk_grade_tbl() function:  Risk Factor Range values comes table Surveillance Error Grid paper.  J Diabetes Sci Technol. 2014 Jul;8(4):658-72. doi: 10.1177/1932296814539589.  ’ll compare application output (using test data) :","code":"risk_grade_tbl <- seg_risk_grade_tbl(risk_vars = risk_vars_tbl) risk_grade_tbl"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-grade.html","id":"application-riskgradetable","dir":"Articles","previous_headings":"Risk Grade Table","what":"Application RiskGradeTable","title":"Risk Grades","text":"’ll build image output manually wrap output tibble data.frame app_risk_grade_tbl","code":"app_risk_grade_tbl <- as.data.frame(   tibble::tibble(     ID = c(1L, 2L, 3L, 4L, 5L),     `Risk Grade` = c('A', 'B', 'C', 'D', 'E'),     `Number of Pairs` = c(9474L, 349L, 35L, 10L, NA_integer_),     Percent = c('96%', '3.5%', '0.4%', '0.1%', NA_character_),     `Risk Factor Range` = c('0 - 0.5', '> 0.5 - 1.5', '> 1.5 - 2.5',       '> 2.5 - 3.5', '> 3.5'),   ) ) app_risk_grade_tbl"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-grade.html","id":"test","dir":"Articles","previous_headings":"","what":"Test","title":"Risk Grades","text":"’ll test seg_risk_vars() seg_risk_grade_tbl() functions: risk grade table doesn’t necessarily require test entire table structure–can focus specific columns care output (like Number Pairs) testthat::expect_equal() uses waldo package make comparisons, ’ll use first check Number Pairs columns Now can formally test columns using testthat::expect_equal() limit testing Number Pairs column","code":"waldo::compare(   x = risk_grade_tbl$`Number of Pairs`,    y = app_risk_grade_tbl$`Number of Pairs` ) #> ✔ No differences testthat::test_that(\"Test risk grade table\", { testthat::expect_equal(   # function table   object = risk_grade_tbl$`Number of Pairs`,    # application table   expected = app_risk_grade_tbl$`Number of Pairs`   ) }) #> Test passed 🎊"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"SEG Risk Variables","text":"vignette covers development risk variables performs unit tests associated functions ensure output matches tables application.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"load-test-data","dir":"Articles","previous_headings":"","what":"Load test data","title":"SEG Risk Variables","text":"segtools package uses testthat, common testing framework performing unit tests. ’ll load test data file used GitHub repo (VanderbiltComplete.csv) run shiny app generate tables comparison.","code":"github_data_root <-   \"https://raw.githubusercontent.com/mjfrigaard/seg-shiny-data/master/Data/\" full_sample_repo <- base::paste0(github_data_root,   \"VanderbiltComplete.csv\") test_vand_comp_data <-   vroom::vroom(file = full_sample_repo, delim = \",\") glimpse(test_vand_comp_data) #> Rows: 9,891 #> Columns: 2 #> $ BGM <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 132, 146, 24… #> $ REF <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 131, 155, 25…"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"application-version-1-3-3-functions","dir":"Articles","previous_headings":"Load test data","what":"Application (version 1.3.3) functions","title":"SEG Risk Variables","text":"previous application functions stored helpers.R file GitHub repo.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"seg-risk-variables","dir":"Articles","previous_headings":"","what":"SEG risk variables","title":"SEG Risk Variables","text":"SEG variables initially created segTable() function","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"error","dir":"Articles","previous_headings":"SEG risk variables","what":"Error","title":"SEG Risk Variables","text":"try full_sample_repo, get following error: ’ve split previous segTable() function splits two parts: risk category columns (seg_risk_cat_cols()) ISO columns (seg_iso_cols()).","code":"segTable(dat = full_sample_repo) #> Error in loadNamespace(x): there is no package called 'readr'"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"seg-risk-category-columns","dir":"Articles","previous_headings":"SEG risk variables > Error","what":"SEG Risk Category Columns","title":"SEG Risk Variables","text":"’ll split segTable() two parts identify bug: seg_risk_cat_cols() imports AppLookUpRiskCat.csv AppRiskPairData.csv inside function. check seg_risk_cat_cols() test_vand_comp_data:","code":"risk_cat_vars <- seg_risk_cat_cols(df = test_vand_comp_data) glimpse(risk_cat_vars) #> Rows: 9,868 #> Columns: 12 #> $ BGM           <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 13… #> $ REF           <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 13… #> $ bgm_pair_cat  <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM… #> $ ref_pair_2cat <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ included      <chr> \"Total included in SEG Analysis\", \"Total included in SEG… #> $ RiskPairID    <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 782… #> $ RiskFactor    <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, -… #> $ abs_risk      <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, 0… #> $ risk_cat      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ ABSLB         <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, … #> $ ABSUB         <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0… #> $ risk_cat_txt  <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"seg-iso-range-columns","dir":"Articles","previous_headings":"SEG risk variables > Error","what":"SEG ISO Range Columns","title":"SEG Risk Variables","text":"seg_iso_cols() creates ISO columns: seg_iso_cols() accepts output seg_risk_cat_cols() returns dataset risk/ISO variables.","code":"iso_vars_tbl <- seg_iso_cols(risk_cat_cols = risk_cat_vars) glimpse(iso_vars_tbl) #> Rows: 9,868 #> Columns: 19 #> $ BGM            <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 1… #> $ REF            <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 1… #> $ bgm_pair_cat   <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BG… #> $ ref_pair_2cat  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ included       <chr> \"Total included in SEG Analysis\", \"Total included in SE… #> $ RiskPairID     <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 78… #> $ RiskFactor     <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ abs_risk       <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ risk_cat       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ABSLB          <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001,… #> $ ABSUB          <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, … #> $ risk_cat_txt   <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\",… #> $ rel_diff       <dbl> -0.047244094, -0.049327354, -0.030120482, -0.068292683,… #> $ abs_rel_diff   <dbl> 0.047244094, 0.049327354, 0.030120482, 0.068292683, 0.1… #> $ sq_rel_diff    <dbl> 2.232004e-03, 2.433188e-03, 9.072434e-04, 4.663891e-03,… #> $ iso_diff       <dbl> 4.7244094, 4.9327354, 3.0120482, 6.8292683, 10.0000000,… #> $ iso_range      <chr> \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/… #> $ risk_grade     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", … #> $ risk_grade_txt <chr> \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"seg_risk_vars","dir":"Articles","previous_headings":"SEG risk variables","what":"seg_risk_vars()","title":"SEG Risk Variables","text":"seg_risk_vars() combines SEG risk category ISO range columns wrapper function: check differences seg_risk_vars() iso_vars_tbl output:","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"test","dir":"Articles","previous_headings":"SEG risk variables > seg_risk_vars()","what":"Test","title":"SEG Risk Variables","text":"","code":"testthat::test_that(\"Test seg_risk_vars()\", {   testthat::expect_equal(     # function table     object = seg_risk_vars(df = test_vand_comp_data),      # ISO vars table     expected = iso_vars_tbl   ) }) #> Test passed 😀"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"update-discrepancies-with-risk-grade-table","dir":"Articles","previous_headings":"","what":"Update: discrepancies with Risk Grade table","title":"SEG Risk Variables","text":"Due discrepancies application risk grade table output, risk_grade risk_grade_txt variables adjusted seg_iso_cols() function (see table ):  J Diabetes Sci Technol. 2014 Jul;8(4):658-72. doi: 10.1177/1932296814539589. Risk Factor Range code updated reflect risk zones Surveillance Error Grid paper.","code":"risk_grade = dplyr::case_when(         abs_risk >= 0.0 & abs_risk < 0.5 ~ \"A\",         abs_risk >= 0.5 & abs_risk < 1.5 ~ \"B\",         abs_risk >= 1.5 & abs_risk < 2.5 ~ \"C\",         abs_risk >= 2.5 & abs_risk < 3.5 ~ \"D\",         abs_risk >= 3.5 ~ \"E\"       ),       risk_grade_txt = dplyr::case_when(         abs_risk >= 0.0 & abs_risk < 0.5 ~ \"0 - 0.5\",         abs_risk >= 0.5 & abs_risk < 1.0 ~ \"> 0.5 - 1.0\",         abs_risk >= 1.0 & abs_risk < 2.0 ~ \"> 1.0 - 2.0\",         abs_risk >= 2.0 & abs_risk < 3.0 ~ \"> 2.0 - 3.0\",         abs_risk >= 3.0 ~ \"> 3.0\"       )"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"updated-seg_iso_cols","dir":"Articles","previous_headings":"Update: discrepancies with Risk Grade table","what":"Updated seg_iso_cols()","title":"SEG Risk Variables","text":"remedy issue updated seg_risk_vars() function :  verify, ’ll use seg_risk_cat_cols() seg_iso_cols() create new iso_vars_tbl:","code":"# create risk categories risk_cat_vars <- seg_risk_cat_cols(df = test_vand_comp_data) # create ISO columns iso_vars_tbl <- seg_iso_cols(risk_cat_vars = risk_cat_vars) glimpse(iso_vars_tbl) #> Rows: 9,868 #> Columns: 19 #> $ BGM            <dbl> 121, 212, 161, 191, 189, 104, 293, 130, 261, 147, 83, 1… #> $ REF            <dbl> 127, 223, 166, 205, 210, 100, 296, 142, 231, 148, 81, 1… #> $ bgm_pair_cat   <chr> \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BGM < REF\", \"BG… #> $ ref_pair_2cat  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ included       <chr> \"Total included in SEG Analysis\", \"Total included in SE… #> $ RiskPairID     <dbl> 72849, 127636, 96928, 114997, 113800, 62605, 176390, 78… #> $ RiskFactor     <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ abs_risk       <dbl> 0.0025445, 0.0279900, 0.0000000, 0.2061100, 0.2086500, … #> $ risk_cat       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ ABSLB          <dbl> -0.001, -0.001, -0.001, -0.001, -0.001, -0.001, -0.001,… #> $ ABSUB          <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, … #> $ risk_cat_txt   <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\",… #> $ rel_diff       <dbl> -0.047244094, -0.049327354, -0.030120482, -0.068292683,… #> $ abs_rel_diff   <dbl> 0.047244094, 0.049327354, 0.030120482, 0.068292683, 0.1… #> $ sq_rel_diff    <dbl> 2.232004e-03, 2.433188e-03, 9.072434e-04, 4.663891e-03,… #> $ iso_diff       <dbl> 4.7244094, 4.9327354, 3.0120482, 6.8292683, 10.0000000,… #> $ iso_range      <chr> \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/dL\", \"<= 5% or 5 mg/… #> $ risk_grade     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", … #> $ risk_grade_txt <chr> \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", \"0 - 0.5\", …"},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"updated-seg_risk_vars","dir":"Articles","previous_headings":"Update: discrepancies with Risk Grade table","what":"Updated seg_risk_vars()","title":"SEG Risk Variables","text":"Now can compare output output updated seg_risk_vars() function:","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/risk-vars.html","id":"re-test","dir":"Articles","previous_headings":"Update: discrepancies with Risk Grade table > Updated seg_risk_vars()","what":"Re-Test","title":"SEG Risk Variables","text":"","code":"testthat::test_that(\"Test seg_risk_vars()\", {   testthat::expect_equal(     # updated function table     object = seg_risk_vars(df = test_vand_comp_data),      # ISO vars table     expected = iso_vars_tbl   ) }) #> Test passed 🎊"},{"path":"https://mjfrigaard.github.io/segtools/articles/seg-graph.html","id":"use","dir":"Articles","previous_headings":"","what":"Use","title":"SEG Graph","text":"’ll load example dataset, FullSampleData FullSampleData two columns: BGM contains blood glucose monitor values REF contains reference values. build SEG graph, seg_graph() function needs input data (FullSampleData)  also four optional aesthetic arguments:","code":"FullSampleData <- segtools::get_seg_data(data = \"FullSampleData\") dplyr::glimpse(FullSampleData) #> Rows: 7,857 #> Columns: 2 #> $ BGM <dbl> 121, 212, 161, 191, 189, 293, 130, 147, 83, 132, 146, 249, 119, 15… #> $ REF <dbl> 127, 223, 166, 205, 210, 296, 142, 148, 81, 131, 155, 254, 125, 14… seg_graph(   data = FullSampleData) seg_graph(   data = FullSampleData,    text_size = 16,   alpha_var = 3/4,   size_var = 3,    color_var = \"#4D4D4D\",    fill_var = \"#FFFFFF\")"},{"path":"https://mjfrigaard.github.io/segtools/articles/seg-graph.html","id":"interpretation","dir":"Articles","previous_headings":"","what":"Interpretation","title":"SEG Graph","text":"points SEG graph fall along linear path ‘identity line’ (bottom-left upper-right) minimal risk, whereas points approach upper-left bottom-right corners graph greater risk. “spectrum risk fanned risk whatsoever (identity line measured reference measurements) toward greatest risk 2 measurements maximally divergent.” - Surveillance Error Grid (doi: 10.1177/1932296814539589)","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"summary-tables","dir":"Articles","previous_headings":"","what":"Summary Tables","title":"Getting started","text":"summary tables rely separate functions table.","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"pairs-table","dir":"Articles","previous_headings":"Summary Tables","what":"Pairs table","title":"Getting started","text":"seg_pairs_table() returns pairs comparing BGM REF","code":"seg_pair_type_tbl(df = test_data)"},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"mard-table","dir":"Articles","previous_headings":"Summary Tables","what":"MARD table","title":"Getting started","text":"MARD table requires two functions: seg_risk_vars() calculate intermediate risk variables seg_mard_tbl() calculate Bias, MARD, CV, lower/upper 95% CI","code":"risk_vars_tbl <- seg_risk_vars(df = test_data) seg_mard_tbl(risk_vars_tbl)"},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"risk-grade-table","dir":"Articles","previous_headings":"Summary Tables","what":"Risk grade table","title":"Getting started","text":"seg_risk_grade_tbl() returns table risk grades","code":"seg_risk_grade_tbl(risk_vars_tbl)"},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"risk-category-table","dir":"Articles","previous_headings":"Summary Tables","what":"Risk category table","title":"Getting started","text":"seg_risk_level_table() return table risk levels categories","code":"seg_risk_cat_tbl(risk_vars_tbl)"},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"iso-range-table","dir":"Articles","previous_headings":"Summary Tables","what":"ISO range table","title":"Getting started","text":"seg_iso_range_tbl() returns table compliance ranges","code":"seg_iso_range_tbl(risk_vars_tbl)"},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"compliant-pairs-table","dir":"Articles","previous_headings":"Summary Tables","what":"Compliant pairs table","title":"Getting started","text":"seg_binom_tbl() returns table binomial test compliant pairs","code":"seg_binom_tbl(risk_vars_tbl)"},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"graphs","dir":"Articles","previous_headings":"","what":"Graphs","title":"Getting started","text":"segtools can also create following graphs:","code":""},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"the-seg-graph","dir":"Articles","previous_headings":"Graphs","what":"The SEG Graph","title":"Getting started","text":"","code":"seg_graph(   data = test_data,   alpha_var = 3 / 4,   size_var = 2.5,   color_var = \"#000000\",   fill_var = \"#FFFFFF\" )"},{"path":"https://mjfrigaard.github.io/segtools/articles/segtools.html","id":"the-modified-bland-altman-plot","dir":"Articles","previous_headings":"Graphs","what":"The Modified Bland-Altman Plot","title":"Getting started","text":"","code":"source(\"../R/seg_modba_graph.R\") seg_modba_graph(data = test_data)"},{"path":"https://mjfrigaard.github.io/segtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Frigaard. Maintainer, author.","code":""},{"path":"https://mjfrigaard.github.io/segtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Frigaard M (2023). segtools: surveillance error grid tools. R package version 1.1.2, https://mjfrigaard.github.io/segtools/.","code":"@Manual{,   title = {segtools: The surveillance error grid tools},   author = {Martin Frigaard},   year = {2023},   note = {R package version 1.1.2},   url = {https://mjfrigaard.github.io/segtools/}, }"},{"path":"https://mjfrigaard.github.io/segtools/index.html","id":"segtools","dir":"","previous_headings":"","what":"The surveillance error grid tools","title":"The surveillance error grid tools","text":"segtools provides underlying functions calculations Surveillance Error Grid shiny application. information, see original paper: Klonoff, David C., Courtney Lias, Robert Vigersky, William Clarke, Joan Lee Parkes, David B. Sacks, M. Sue Kirkman, et al. 2014. “Surveillance Error Grid.” Journal Diabetes Science Technology 8 (4): 658–72. https://doi.org/10.1177/1932296814539589","code":""},{"path":"https://mjfrigaard.github.io/segtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The surveillance error grid tools","text":"can install development version segtools GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"mjfrigaard/segtools\")"},{"path":"https://mjfrigaard.github.io/segtools/index.html","id":"previous-work","dir":"","previous_headings":"","what":"Previous work","title":"The surveillance error grid tools","text":"previous shiny applications stored Quesgen GitHub repositories: Version 1.3.2 Version 1.3.3","code":""},{"path":"https://mjfrigaard.github.io/segtools/index.html","id":"seg-graph","dir":"","previous_headings":"","what":"SEG Graph","title":"The surveillance error grid tools","text":"SEG graph can created dataset BGM REF values:  Read .","code":"library(segtools) library(vroom) # import data test_data <- vroom::vroom(   file =     system.file(\"extdata\", \"VanderbiltComplete.csv\",         package = \"segtools\"), delim = \",\") # plot segtools::seg_graph(   data = test_data )"},{"path":"https://mjfrigaard.github.io/segtools/reference/get_extdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data files from inst/extdata/ folder — get_extdata","title":"Import data files from inst/extdata/ folder — get_extdata","text":"Intended used inside pakcage folder","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_extdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data files from inst/extdata/ folder — get_extdata","text":"","code":"get_extdata(file_name)"},{"path":"https://mjfrigaard.github.io/segtools/reference/get_extdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data files from inst/extdata/ folder — get_extdata","text":"file_name name file","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_extdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data files from inst/extdata/ folder — get_extdata","text":"data file","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_extdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data files from inst/extdata/ folder — get_extdata","text":"","code":"# meant to be used for package development! # get_extdata(\"RiskPairData.csv\") # get_extdata(\"AppRiskPairData.csv\")"},{"path":"https://mjfrigaard.github.io/segtools/reference/get_importFrom.html","id":null,"dir":"Reference","previous_headings":"","what":"Get roxygen2 tags (@importFrom) — get_importFrom","title":"Get roxygen2 tags (@importFrom) — get_importFrom","text":"Get roxygen2 tags (@importFrom)","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_importFrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get roxygen2 tags (@importFrom) — get_importFrom","text":"","code":"get_importFrom(pkg, fun = NULL)"},{"path":"https://mjfrigaard.github.io/segtools/reference/get_importFrom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get roxygen2 tags (@importFrom) — get_importFrom","text":"pkg package (must installed) fun string function names","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_importFrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get roxygen2 tags (@importFrom) — get_importFrom","text":"tags roxygen2","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_importFrom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get roxygen2 tags (@importFrom) — get_importFrom","text":"","code":"require(bs4Dash) #> Loading required package: bs4Dash #> Warning: there is no package called ‘bs4Dash’ get_importFrom(pkg = 'bs4Dash', fun = 'valueBox') #> Error in as.environment(pos): no item called \"package:bs4Dash\" on the search list"},{"path":"https://mjfrigaard.github.io/segtools/reference/get_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get installed packages — get_pkgs","title":"Get installed packages — get_pkgs","text":"Get installed packages","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get installed packages — get_pkgs","text":"","code":"get_pkgs()"},{"path":"https://mjfrigaard.github.io/segtools/reference/get_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get installed packages — get_pkgs","text":"character vector installed packages","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_pkgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get installed packages — get_pkgs","text":"","code":"get_pkgs() #> c(\"R6\", \"RColorBrewer\", \"Rcpp\", \"RcppEigen\", \"Rttf2pt1\", \"askpass\",  #> \"base64enc\", \"bit\", \"bit64\", \"brio\", \"bslib\", \"cachem\", \"callr\",  #> \"cli\", \"colorspace\", \"cpp11\", \"crayon\", \"curl\", \"desc\", \"diffobj\",  #> \"digest\", \"downlit\", \"dplyr\", \"ellipsis\", \"evaluate\", \"extrafont\",  #> \"extrafontdb\", \"fansi\", \"farver\", \"fastmap\", \"fontawesome\", \"fs\",  #> \"generics\", \"ggforce\", \"ggfun\", \"ggimage\", \"ggplot2\", \"ggplotify\",  #> \"glue\", \"gridGraphics\", \"gtable\", \"hexSticker\", \"hexbin\", \"highr\",  #> \"hms\", \"htmltools\", \"httr\", \"isoband\", \"janitor\", \"jquerylib\",  #> \"jsonlite\", \"knitr\", \"labeling\", \"lifecycle\", \"lubridate\", \"magick\",  #> \"magrittr\", \"memoise\", \"mime\", \"munsell\", \"openssl\", \"pak\", \"patchwork\",  #> \"pillar\", \"pkgconfig\", \"pkgdown\", \"pkgload\", \"png\", \"polyclip\",  #> \"praise\", \"prettyunits\", \"processx\", \"progress\", \"ps\", \"purrr\",  #> \"ragg\", \"rappdirs\", \"rematch2\", \"renv\", \"rlang\", \"rmarkdown\",  #> \"rprojroot\", \"sass\", \"scales\", \"segtools\", \"sessioninfo\", \"showtext\",  #> \"showtextdb\", \"snakecase\", \"stringi\", \"stringr\", \"sys\", \"sysfonts\",  #> \"systemfonts\", \"testthat\", \"textshaping\", \"tibble\", \"tidyr\",  #> \"tidyselect\", \"timechange\", \"tinytex\", \"tweenr\", \"tzdb\", \"utf8\",  #> \"vctrs\", \"viridisLite\", \"vroom\", \"waldo\", \"whisker\", \"withr\",  #> \"xfun\", \"xml2\", \"yaml\", \"yulab.utils\", \"KernSmooth\", \"MASS\",  #> \"Matrix\", \"base\", \"boot\", \"class\", \"cluster\", \"codetools\", \"compiler\",  #> \"datasets\", \"foreign\", \"grDevices\", \"graphics\", \"grid\", \"lattice\",  #> \"methods\", \"mgcv\", \"nlme\", \"nnet\", \"parallel\", \"rpart\", \"spatial\",  #> \"splines\", \"stats\", \"stats4\", \"survival\", \"tcltk\", \"tools\", \"utils\" #> )"},{"path":"https://mjfrigaard.github.io/segtools/reference/get_seg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"SEG data switch — get_seg_data","title":"SEG data switch — get_seg_data","text":"SEG data switch","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/get_seg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEG data switch — get_seg_data","text":"","code":"get_seg_data(data)"},{"path":"https://mjfrigaard.github.io/segtools/reference/get_seg_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEG data switch — get_seg_data","text":"","code":"get_seg_data(\"names\") #>  [1] \"VanderbiltComplete\"   \"AppRiskPairData\"      \"RiskPairData\"         #>  [4] \"AppLookUpRiskCat\"     \"LookUpRiskCat\"        \"AppTestData\"          #>  [7] \"AppTestDataSmall\"     \"AppTestDataMed\"       \"AppTestDataBig\"       #> [10] \"FullSampleData\"       \"ModBAData\"            \"No_Interference_Dogs\" #> [13] \"SEGRiskTable\"         \"SampMeasData\"         \"SampleData\"           #> [16] \"lkpRiskGrade\"         \"lkpSEGRiskCat4\""},{"path":"https://mjfrigaard.github.io/segtools/reference/import_flat_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Import plain text data file — import_flat_file","title":"Import plain text data file — import_flat_file","text":"Import plain text data file","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/import_flat_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import plain text data file — import_flat_file","text":"","code":"import_flat_file(path)"},{"path":"https://mjfrigaard.github.io/segtools/reference/import_flat_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import plain text data file — import_flat_file","text":"path path file","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/import_flat_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import plain text data file — import_flat_file","text":"imported flat file","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/import_flat_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import plain text data file — import_flat_file","text":"","code":"test_data <- import_flat_file(system.file(\"extdata\", \"VanderbiltComplete.csv\",                               package = \"segtools\")) utils::str(test_data) #> tibble [9,891 × 2] (S3: tbl_df/tbl/data.frame) #>  $ BGM: num [1:9891] 121 212 161 191 189 104 293 130 261 147 ... #>  $ REF: num [1:9891] 127 223 166 205 210 100 296 142 231 148 ..."},{"path":"https://mjfrigaard.github.io/segtools/reference/list_extdata_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Find inst/extdata/ paths — list_extdata_paths","title":"Find inst/extdata/ paths — list_extdata_paths","text":"Find inst/extdata/ paths","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/list_extdata_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find inst/extdata/ paths — list_extdata_paths","text":"","code":"list_extdata_paths()"},{"path":"https://mjfrigaard.github.io/segtools/reference/list_extdata_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find inst/extdata/ paths — list_extdata_paths","text":"list absolute file paths inst/extdata","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/list_extdata_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find inst/extdata/ paths — list_extdata_paths","text":"","code":"list_extdata_paths() #> character(0)"},{"path":"https://mjfrigaard.github.io/segtools/reference/rgb2hex.html","id":null,"dir":"Reference","previous_headings":"","what":"RGB to hex color — rgb2hex","title":"RGB to hex color — rgb2hex","text":"RGB hex color","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/rgb2hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RGB to hex color — rgb2hex","text":"","code":"rgb2hex(r, g, b)"},{"path":"https://mjfrigaard.github.io/segtools/reference/rgb2hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RGB to hex color — rgb2hex","text":"r red g green b blue","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/rgb2hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RGB to hex color — rgb2hex","text":"colors hex","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/rgb2hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RGB to hex color — rgb2hex","text":"","code":"rgb2hex(0, 165, 0) #> [1] \"#00A500\""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_binom_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create compliant pairs table — seg_binom_tbl","title":"Create compliant pairs table — seg_binom_tbl","text":"Create compliant pairs table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_binom_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create compliant pairs table — seg_binom_tbl","text":"","code":"seg_binom_tbl(risk_vars)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_binom_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create compliant pairs table — seg_binom_tbl","text":"risk_vars output seg_risk_vars()","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_binom_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create compliant pairs table — seg_binom_tbl","text":"Binomial test table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_binom_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create compliant pairs table — seg_binom_tbl","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. risk_cols_tbl <- seg_risk_vars(df = test_data) seg_binom_tbl(risk_cols_tbl) #> # A tibble: 1 × 5 #>   `Compliant Pairs` `Compliant Pairs %` `Lower Bound for Acceptance` #>               <int> <chr>                                      <dbl> #> 1              9220 93.4%                                       9339 #> # ℹ 2 more variables: `Lower Bound for Acceptance %` <chr>, Result <chr>"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 function for SEG grid — seg_graph","title":"ggplot2 function for SEG grid — seg_graph","text":"ggplot2 function SEG grid","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 function for SEG grid — seg_graph","text":"","code":"seg_graph(   data,   text_size = 14,   alpha_var = 0.6,   size_var = 2.3,   color_var = \"#000000\",   fill_var = \"#FFFFFF\" )"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 function for SEG grid — seg_graph","text":"data Dataset containing BGM REF columns alpha_var alpha setting size_var size setting color_var color setting fill_var fill setting","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 function for SEG grid — seg_graph","text":"SEG grid graph","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 function for SEG grid — seg_graph","text":"","code":"require(vroom) #> Loading required package: vroom vanderbilt_complete <- vroom::vroom(  file =    system.file(\"extdata\", \"VanderbiltComplete.csv\",                package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. seg_graph(vanderbilt_complete)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — seg_iso_cols","title":"Title — seg_iso_cols","text":"Title","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — seg_iso_cols","text":"","code":"seg_iso_cols(risk_cat_cols)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — seg_iso_cols","text":"risk_cat_cols output seg_risk_cat_cols()","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — seg_iso_cols","text":"ISO range variable table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — seg_iso_cols","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. risk_cat_tbl <- seg_risk_cat_cols(test_data) seg_iso_cols(risk_cat_cols = risk_cat_tbl) #> # A tibble: 9,868 × 19 #>      BGM   REF bgm_pair_cat ref_pair_2cat included         RiskPairID RiskFactor #>    <dbl> <dbl> <chr>        <chr>         <chr>                 <dbl>      <dbl> #>  1   121   127 BGM < REF    NA            Total included …      72849    0.00254 #>  2   212   223 BGM < REF    NA            Total included …     127636    0.0280  #>  3   161   166 BGM < REF    NA            Total included …      96928    0       #>  4   191   205 BGM < REF    NA            Total included …     114997    0.206   #>  5   189   210 BGM < REF    NA            Total included …     113800    0.209   #>  6   104   100 BGM > REF    NA            Total included …      62605   -0.125   #>  7   293   296 BGM < REF    NA            Total included …     176390    0       #>  8   130   142 BGM < REF    NA            Total included …      78273    0.267   #>  9   261   231 BGM > REF    NA            Total included …     157093   -0.285   #> 10   147   148 BGM < REF    NA            Total included …      88496    0       #> # ℹ 9,858 more rows #> # ℹ 12 more variables: abs_risk <dbl>, risk_cat <dbl>, ABSLB <dbl>, #> #   ABSUB <dbl>, risk_cat_txt <chr>, rel_diff <dbl>, abs_rel_diff <dbl>, #> #   sq_rel_diff <dbl>, iso_diff <dbl>, iso_range <chr>, risk_grade <chr>, #> #   risk_grade_txt <chr>"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_range_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"SEG iso range table — seg_iso_range_tbl","title":"SEG iso range table — seg_iso_range_tbl","text":"SEG iso range table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_range_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEG iso range table — seg_iso_range_tbl","text":"","code":"seg_iso_range_tbl(risk_vars)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_range_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEG iso range table — seg_iso_range_tbl","text":"risk_vars output seg_risk_vars()","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_range_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEG iso range table — seg_iso_range_tbl","text":"ISO range variables","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_iso_range_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEG iso range table — seg_iso_range_tbl","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. risk_cols_tbl <- seg_risk_vars(df = test_data) seg_iso_range_tbl(risk_cols_tbl) #> # A tibble: 5 × 4 #>      ID `ISO range`             N Percent #>   <int> <chr>               <int> <chr>   #> 1     1 <= 5% or 5 mg/dL     5328 54%     #> 2     2 > 5 - 10% or mg/dL   2842 28.8%   #> 3     3 > 10 - 15% or mg/dL  1050 10.6%   #> 4     4 > 15 - 20% mg/dL      340 3.4%    #> 5     5 > 20% or 20 mg/dL     308 3.1%"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_mard_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"SEG MARD table — seg_mard_tbl","title":"SEG MARD table — seg_mard_tbl","text":"SEG MARD table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_mard_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEG MARD table — seg_mard_tbl","text":"","code":"seg_mard_tbl(risk_vars)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_mard_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEG MARD table — seg_mard_tbl","text":"risk_vars output seg_risk_vars()","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_mard_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEG MARD table — seg_mard_tbl","text":"MARD table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_mard_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEG MARD table — seg_mard_tbl","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. risk_cols_tbl <- seg_risk_vars(df = test_data) seg_mard_tbl(risk_cols_tbl) #> # A tibble: 1 × 6 #>   Total Bias  MARD  CV    `Lower 95% Limit of Agreement` Upper 95% Limit of Ag…¹ #>   <int> <chr> <chr> <chr> <chr>                          <chr>                   #> 1  9868 0.6%  7%    14.8% -28.3%                         29.6%                   #> # ℹ abbreviated name: ¹​`Upper 95% Limit of Agreement`"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_modba_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"The SEG modified Bland-Altman plot — seg_modba_graph","title":"The SEG modified Bland-Altman plot — seg_modba_graph","text":"SEG modified Bland-Altman plot","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_modba_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The SEG modified Bland-Altman plot — seg_modba_graph","text":"","code":"seg_modba_graph(data, text_size = 16)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_modba_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The SEG modified Bland-Altman plot — seg_modba_graph","text":"data Dataset containing BGM REF columns text_size base size passed theme_seg()","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_modba_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The SEG modified Bland-Altman plot — seg_modba_graph","text":"modified Bland-Altman plot","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_modba_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The SEG modified Bland-Altman plot — seg_modba_graph","text":"","code":"require(vroom) vanderbilt_complete <- vroom::vroom(  file =    system.file(\"extdata\", \"VanderbiltComplete.csv\",                package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. seg_modba_graph(data = vanderbilt_complete) #> Warning: Removed 79 rows containing missing values (`geom_point()`). #> Warning: Removed 79 rows containing missing values (`geom_point()`). #> Warning: Removed 1 row containing missing values (`geom_line()`). #> Warning: Removed 1 row containing missing values (`geom_line()`)."},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_pair_type_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"SEG pairs type table — seg_pair_type_tbl","title":"SEG pairs type table — seg_pair_type_tbl","text":"SEG pairs type table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_pair_type_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEG pairs type table — seg_pair_type_tbl","text":"","code":"seg_pair_type_tbl(df)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_pair_type_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEG pairs type table — seg_pair_type_tbl","text":"df data BGM REF columns","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_pair_type_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEG pairs type table — seg_pair_type_tbl","text":"pair type columns","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_pair_type_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEG pairs type table — seg_pair_type_tbl","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. seg_pair_type_tbl(test_data) #> # A tibble: 6 × 2 #>   `Pair Type`                           Count #>   <chr>                                 <int> #> 1 Total                                  9891 #> 2 BGM < REF                              4710 #> 3 BGM = REF                               479 #> 4 BGM > REF                              4702 #> 5 REF > 600: Excluded from SEG Analysis    23 #> 6 Total included in SEG Analysis         9868"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"SEG risk category variables — seg_risk_cat_cols","title":"SEG risk category variables — seg_risk_cat_cols","text":"SEG risk category variables","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEG risk category variables — seg_risk_cat_cols","text":"","code":"seg_risk_cat_cols(df)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEG risk category variables — seg_risk_cat_cols","text":"df data BGM REF columns","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEG risk category variables — seg_risk_cat_cols","text":"seg risk category columns table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEG risk category variables — seg_risk_cat_cols","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. seg_risk_cat_cols(test_data) #> # A tibble: 9,868 × 12 #>      BGM   REF bgm_pair_cat ref_pair_2cat included         RiskPairID RiskFactor #>    <dbl> <dbl> <chr>        <chr>         <chr>                 <dbl>      <dbl> #>  1   121   127 BGM < REF    NA            Total included …      72849    0.00254 #>  2   212   223 BGM < REF    NA            Total included …     127636    0.0280  #>  3   161   166 BGM < REF    NA            Total included …      96928    0       #>  4   191   205 BGM < REF    NA            Total included …     114997    0.206   #>  5   189   210 BGM < REF    NA            Total included …     113800    0.209   #>  6   104   100 BGM > REF    NA            Total included …      62605   -0.125   #>  7   293   296 BGM < REF    NA            Total included …     176390    0       #>  8   130   142 BGM < REF    NA            Total included …      78273    0.267   #>  9   261   231 BGM > REF    NA            Total included …     157093   -0.285   #> 10   147   148 BGM < REF    NA            Total included …      88496    0       #> # ℹ 9,858 more rows #> # ℹ 5 more variables: abs_risk <dbl>, risk_cat <dbl>, ABSLB <dbl>, ABSUB <dbl>, #> #   risk_cat_txt <chr>"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"SEG risk category table — seg_risk_cat_tbl","title":"SEG risk category table — seg_risk_cat_tbl","text":"SEG risk category table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEG risk category table — seg_risk_cat_tbl","text":"","code":"seg_risk_cat_tbl(risk_vars)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEG risk category table — seg_risk_cat_tbl","text":"risk_vars output seg_risk_vars()","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEG risk category table — seg_risk_cat_tbl","text":"risk cat variable table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_cat_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEG risk category table — seg_risk_cat_tbl","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. risk_cols_tbl <- seg_risk_vars(df = test_data) seg_risk_cat_tbl(risk_cols_tbl) #> # A tibble: 8 × 4 #>   `SEG Risk Level` `SEG Risk Category` `Number of Pairs` Percent #>              <dbl> <chr>                           <int> <chr>   #> 1                0 None                             9474 96%     #> 2                1 Slight, Lower                     294 3%      #> 3                2 Slight, Higher                     55 0.6%    #> 4                3 Moderate, Lower                    24 0.2%    #> 5                4 Moderate, Higher                   11 0.1%    #> 6                5 Severe, Lower                      10 0.1%    #> 7                6 Severe, Upper                      NA NA      #> 8                7 Extreme                            NA NA"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_grade_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"SEG risk grade table — seg_risk_grade_tbl","title":"SEG risk grade table — seg_risk_grade_tbl","text":"SEG risk grade table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_grade_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEG risk grade table — seg_risk_grade_tbl","text":"","code":"seg_risk_grade_tbl(risk_vars)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_grade_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEG risk grade table — seg_risk_grade_tbl","text":"risk_vars output seg_risk_vars()","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_grade_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEG risk grade table — seg_risk_grade_tbl","text":"risk grade table","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_grade_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEG risk grade table — seg_risk_grade_tbl","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. risk_cols_tbl <- seg_risk_vars(df = test_data) seg_risk_grade_tbl(risk_cols_tbl) #> # A tibble: 5 × 5 #>      ID `Risk Grade` `Number of Pairs` Percent `Risk Factor Range` #>   <dbl> <chr>                    <int> <chr>   <chr>               #> 1     1 A                         9474 96%     0 - 0.5             #> 2     2 B                          349 3.5%    > 0.5 - 1.0         #> 3     3 C                           35 0.4%    > 1.0 - 2.0         #> 4     4 D                           10 0.1%    > 2.0 - 3.0         #> 5     5 E                           NA NA      > 3.0"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"SEG risk columns (wrapper function) — seg_risk_vars","title":"SEG risk columns (wrapper function) — seg_risk_vars","text":"SEG risk columns (wrapper function)","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEG risk columns (wrapper function) — seg_risk_vars","text":"","code":"seg_risk_vars(df)"},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEG risk columns (wrapper function) — seg_risk_vars","text":"df data BGM REF columns","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEG risk columns (wrapper function) — seg_risk_vars","text":"SEG risk columns","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/seg_risk_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEG risk columns (wrapper function) — seg_risk_vars","text":"","code":"test_data <- vroom::vroom(                 system.file(\"extdata\", \"VanderbiltComplete.csv\",                 package = \"segtools\"), delim = \",\") #> Rows: 9891 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (2): BGM, REF #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. seg_risk_vars(df = test_data) #> # A tibble: 9,868 × 19 #>      BGM   REF bgm_pair_cat ref_pair_2cat included         RiskPairID RiskFactor #>    <dbl> <dbl> <chr>        <chr>         <chr>                 <dbl>      <dbl> #>  1   121   127 BGM < REF    NA            Total included …      72849    0.00254 #>  2   212   223 BGM < REF    NA            Total included …     127636    0.0280  #>  3   161   166 BGM < REF    NA            Total included …      96928    0       #>  4   191   205 BGM < REF    NA            Total included …     114997    0.206   #>  5   189   210 BGM < REF    NA            Total included …     113800    0.209   #>  6   104   100 BGM > REF    NA            Total included …      62605   -0.125   #>  7   293   296 BGM < REF    NA            Total included …     176390    0       #>  8   130   142 BGM < REF    NA            Total included …      78273    0.267   #>  9   261   231 BGM > REF    NA            Total included …     157093   -0.285   #> 10   147   148 BGM < REF    NA            Total included …      88496    0       #> # ℹ 9,858 more rows #> # ℹ 12 more variables: abs_risk <dbl>, risk_cat <dbl>, ABSLB <dbl>, #> #   ABSUB <dbl>, risk_cat_txt <chr>, rel_diff <dbl>, abs_rel_diff <dbl>, #> #   sq_rel_diff <dbl>, iso_diff <dbl>, iso_range <chr>, risk_grade <chr>, #> #   risk_grade_txt <chr>"},{"path":"https://mjfrigaard.github.io/segtools/reference/theme_seg.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 theme (for SEG grid) — theme_seg","title":"ggplot2 theme (for SEG grid) — theme_seg","text":"ggplot2 theme (SEG grid)","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/theme_seg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 theme (for SEG grid) — theme_seg","text":"","code":"theme_seg(   base_size = 14,   base_family = \"Ubuntu\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )"},{"path":"https://mjfrigaard.github.io/segtools/reference/theme_seg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 theme (for SEG grid) — theme_seg","text":"base_size font size base_family font family base_line_size base graph line size base_rect_size base graph rectangle size","code":""},{"path":"https://mjfrigaard.github.io/segtools/reference/theme_seg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 theme (for SEG grid) — theme_seg","text":"ggplot2 theme","code":""},{"path":"https://mjfrigaard.github.io/segtools/news/index.html","id":"segtools-112","dir":"Changelog","previous_headings":"","what":"segtools 1.1.2","title":"segtools 1.1.2","text":"New vignette ggplot2 SEG graph (used application) New vignette hex sticker (using patchwork, hexSticker magick) Updated README reference","code":""},{"path":"https://mjfrigaard.github.io/segtools/news/index.html","id":"segtools-111","dir":"Changelog","previous_headings":"","what":"segtools 1.1.1","title":"segtools 1.1.1","text":"New tests import_flat_file()","code":"==> devtools::test()  ℹ Testing segtools ✔ | F W S  OK | Context ✔ |         3 | import_flat_file [0.2s]                                                                      ✔ |         1 | seg_binom_table [0.5s]                                                                       ✔ |         1 | seg_iso_range_tbl [0.6s]                                                                     ✔ |         1 | seg_iso_vars [0.4s]                                                                        ✔ |         1 | seg_pair_type_tbl [0.1s]                                                                     ✔ |         1 | seg_risk_cat_tbl [0.4s]                                                                      ✔ |         1 | seg_risk_cat_vars [0.2s]                                                                     ✔ |         1 | seg_risk_cols [0.7s]                                                                         ✔ |         1 | seg_risk_grade_tbl [0.4s]                                                                        ══ Results ══════════════════════════════════════════════════════════════════ Duration: 3.7 s  [ FAIL 0 | WARN 0 | SKIP 0 | PASS 11 ]"},{"path":"https://mjfrigaard.github.io/segtools/news/index.html","id":"graphs-1-1-1","dir":"Changelog","previous_headings":"","what":"Graphs","title":"segtools 1.1.1","text":"Updated seg_modba_graph.R Now includes fill color var input (using shape 21) Text size increased better web rendering Updated seg_graph.R New points lines higher contrast colors Axis titles added Text size increased better web rendering","code":""},{"path":"https://mjfrigaard.github.io/segtools/news/index.html","id":"segtools-110","dir":"Changelog","previous_headings":"","what":"segtools 1.1.0","title":"segtools 1.1.0","text":"Updated functions standardize names: functions outputs _cols suffix intermediate/utility functions functions outputs _vars suffix create outputs primary _tbl _graph functions input arguments align function names (.e. seg_risk_vars() creates output functions risk_vars argument) Re-written risk-tables vignette organized. Added SEG Graph vignette","code":""},{"path":"https://mjfrigaard.github.io/segtools/news/index.html","id":"segtools-100","dir":"Changelog","previous_headings":"","what":"segtools 1.0.0","title":"segtools 1.0.0","text":"Updated package functions match shiny application outputs See vignette risk-tables  Unit tests function Data previous build accessible get_seg_data() function Use get_seg_data('names') list datasets","code":"==> devtools::test()  ℹ Testing segtools ✔ | F W S  OK | Context ✔ |         1 | seg_binom_tbl [0.5s]                      ✔ |         1 | seg_iso_range_tbl [0.4s]                     ✔ |         1 | seg_iso_cols [0.3s]                          ✔ |         1 | seg_pair_type_tbl                            ✔ |         1 | seg_risk_cat_tbl [0.3s]                     ✔ |         1 | seg_risk_cat_cols [0.3s]                    ✔ |         1 | seg_risk_vars [0.6s]                        ✔ |         1 | seg_risk_grade_tbl [0.3s]                    ══ Results ═══════════════════════════════════ Duration: 2.8 s  [ FAIL 0 | WARN 0 | SKIP 0 | PASS 8 ] get_seg_data('VanderbiltComplete') # A tibble: 9,891 × 2                                                                  BGM   REF    <dbl> <dbl>  1   121   127  2   212   223  3   161   166  4   191   205  5   189   210  6   104   100  7   293   296  8   130   142  9   261   231 10   147   148 # … with 9,881 more rows # ℹ Use `print(n = ...)` to see more rows get_seg_data('names')  [1] \"VanderbiltComplete.csv\"   \"AppRiskPairData.csv\"      \"RiskPairData.csv\"          [4] \"AppLookUpRiskCat.csv\"     \"LookUpRiskCat.csv\"        \"AppTestData.csv\"           [7] \"AppTestDataSmall.csv\"     \"AppTestDataMed.csv\"       \"AppTestDataBig.csv\"       [10] \"FullSampleData.csv\"       \"ModBAData.csv\"            \"No_Interference_Dogs.csv\" [13] \"SEGRiskTable.csv\"         \"SampMeasData.csv\"         \"SampleData.csv\"           [16] \"lkpRiskGrade.csv\"         \"lkpSEGRiskCat4.csv\""},{"path":"https://mjfrigaard.github.io/segtools/news/index.html","id":"segtools-001","dir":"Changelog","previous_headings":"","what":"segtools 0.0.1","title":"segtools 0.0.1","text":"package configured use pak + renv including renv.config.pak.enabled = TRUE .Rprofile","code":""},{"path":[]},{"path":"https://mjfrigaard.github.io/segtools/news/index.html","id":"pkgdown-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"pkgdown","title":"segtools 0.0.0.9000","text":"Building pkgdown version package nightmare. various pkgdown builds/failures listed : Build #1 pkgdown build #3 #2 pkgdown build #5 #3 error readxl removing readxl package, build worked (almost). Buildpkgdown build #7 #5 deploy step encountered error: process '/usr/bin/git' failed exit code 128 ❌ required changing settings Settings > Actions > General > change Workflow permissions Read write permissions Build #7 Added NEWS.md file track changes package.","code":"✖ Failed to build segtools 0.0.0.9000   Error:    ! error in pak subprocess   Caused by error in `stop_task_build(state, worker)`:   ! Failed to build source package 'segtools'   Full installation output:   * installing *source* package ‘segtools’ ...   staged installation is only possible with locking   ** using non-staged installation   ** R   ** data   *** moving datasets to lazyload DB   ** inst   ** byte-compile and prepare package for lazy loading Error in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]) :      there is no package called ‘readxl’   Calls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart   Execution halted   ERROR: lazy loading failed for package ‘segtools’   * removing ‘/tmp/RtmpHJLGW5/pkg-lib1352430479ed/segtools’   ---   Backtrace:   1. pak::lockfile_install(\".github/pkg.lock\")   2. pak:::remote(function(...) { …   3. err$throw(res$error)   ---   Subprocess backtrace:    1. base::withCallingHandlers(cli_message = function(msg) { …    2. get(\"lockfile_install_internal\", asNamespace(\"pak\"))(...)    3. plan$install()    4. pkgdepends::install_package_plan(plan, lib = private$library, num_workers = nw, …    5. base::withCallingHandlers({ …    6. pkgdepends:::handle_events(state, events)    7. pkgdepends:::handle_event(state, i)    8. pkgdepends:::stop_task(state, worker)    9. pkgdepends:::stop_task_build(state, worker)   10. base::throw(new_pkg_build_error(\"Failed to build source package {pkg}\", …   11. | base::signalCondition(cond)   12. global (function (e) …   Execution halted   Error: Process completed with exit code 1."}]
